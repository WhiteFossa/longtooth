<Window xmlns="https://github.com/avaloniaui"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        mc:Ignorable="d" d:DesignWidth="800" d:DesignHeight="450"
        x:Class="longtooth.Desktop.Views.MainWindow"
        Title="Longtooth">
    
    <Window.Styles>
        <StyleInclude Source="/Styles/Common.xaml" />
    </Window.Styles>

    <!-- Main grid -->
    <Grid ColumnDefinitions="*" RowDefinitions="Auto, Auto, *, 200, Auto" >

        <!-- Connection to server -->
        <Border Classes="VisibleBorders" Grid.Column="0" Grid.Row="0" >
            <StackPanel>
                <TextBlock Text="Server connection" />

                <Grid ColumnDefinitions="Auto, Auto, Auto, Auto, Auto, Auto" RowDefinitions="Auto" >
                    <TextBlock Text="Server:" Grid.Column="0" Grid.Row="0" Classes="VCenterRightMargin"/>

                    <!-- IP -->
                    <TextBox Watermark="IP address" Grid.Column="1" Grid.Row="0"
                        Text="{Binding ServerIp}" />

                    <TextBlock Text=":" Grid.Column="2" Grid.Row="0" Classes="VCenterLeftRightMargins" />

                    <!-- Port -->
                    <TextBox Watermark="Port" Grid.Column="3" Grid.Row="0"
                        Text="{Binding ServerPort}" />

                    <!-- Connect -->
                    <Button Grid.Column="4" Grid.Row="0" Content="Connect" Classes="LeftMargin" Command="{ Binding ConnectAsync }" />

                    <!-- Disconnect -->
                    <Button Grid.Column="5" Grid.Row="0" Content="Disconnect" Classes="LeftMargin" Command="{ Binding DisconnectAsync }"/>
                </Grid>

            </StackPanel>
        </Border>

        <!-- Experiments -->
        <Border Classes="VisibleBorders" Grid.Column="0" Grid.Row="1" >
            <StackPanel>
                <TextBlock Text="Experiments" />

                <Grid ColumnDefinitions="Auto, Auto, Auto, Auto, Auto, Auto, Auto" RowDefinitions="Auto" >

                    <!-- Ping -->
                    <Button Grid.Column="0" Grid.Row="0" Content="Ping" Command="{ Binding PingAsync }" />

                    <!-- Graceful disconnect -->
                    <Button Grid.Column="1" Grid.Row="0" Content="Graceful disconnect" Command="{ Binding GracefulDisconnectAsync }" />

                    <!-- Get mountpoints -->
                    <Button Grid.Column="2" Grid.Row="0" Content="Get mountpoints" Command="{ Binding GetMountpointsAsync }" />

                    <!-- Download file -->
                    <Button Grid.Column="3" Grid.Row="0" Content="Download file" Command="{ Binding DownloadFileAsync }" />

                    <!-- Upload new file -->
                    <Button Grid.Column="4" Grid.Row="0" Content="Upload file" Command="{ Binding UploadFileAsync }" />

                    <!-- Delete current file -->
                    <Button Grid.Column="5" Grid.Row="0" Content="Delete file" Command="{ Binding DeleteFileAsync }" />

                    <!-- Delete current directory -->
                    <Button Grid.Column="6" Grid.Row="0" Content="Delete directory" Command="{ Binding DeleteDirectoryAsync }" />
                </Grid>
            </StackPanel>
        </Border>

        <!-- Files manager -->
        <Border Classes="VisibleBorders" Grid.Column="0" Grid.Row="2" >
            <Grid ColumnDefinitions="Auto, *" RowDefinitions="*">
                
                <!-- Mountpoints -->
                <Border Classes="VisibleBorders" Grid.Column="0" Grid.Row="0">
                    <Grid ColumnDefinitions="*" RowDefinitions="*">
                        <DataGrid
                            Items="{ Binding Mountpoints }"
                            HeadersVisibility="All"
                            GridLinesVisibility="All"
                            VerticalScrollBarVisibility="Visible"
                            Grid.Column="0"
                            Grid.Row="0"
                            IsReadOnly="true"
                            CellPointerPressed="OnMountpointCellPressedAsync"
                            >

                            <DataGrid.Columns>
                                <DataGridTextColumn Header="Mountpoint" Binding="{ Binding Name }" />
                                <DataGridTextColumn Header="Path" Binding="{ Binding ServerSidePath }" MinWidth="300"/>
                            </DataGrid.Columns>
                        </DataGrid>
                    </Grid>
                </Border>

                <!-- Files and directories -->
                <Border Classes="VisibleBorders" Grid.Column="1" Grid.Row="0">
                    <Grid ColumnDefinitions="*" RowDefinitions="Auto, Auto, *">
                        <!-- Current directory -->
                        <StackPanel Orientation="Horizontal" Grid.Column="0" Grid.Row="0">
                            <TextBlock Text="Current directory: " Classes="VCenterRightMargin" />

                            <TextBlock Text="{ Binding CurrentDirectory }" Classes="VCenterRightMargin"/>
                        </StackPanel>

                        <!-- Current file -->
                        <StackPanel Orientation="Horizontal" Grid.Column="0" Grid.Row="1">
                            <TextBlock Text="Current file: " Classes="VCenterRightMargin" />

                            <TextBlock Text="{ Binding CurrentFile.Name }" Classes="VCenterRightMargin"/>
                        </StackPanel>
                        
                        <!-- Files -->
                        <DataGrid
                            Items="{ Binding DirectoryContent }"
                            HeadersVisibility="All"
                            GridLinesVisibility="All"
                            VerticalScrollBarVisibility="Visible"
                            Grid.Column="0"
                            Grid.Row="2"
                            Classes="VisibleBorders"
                            IsReadOnly="true"
                            CellPointerPressed="OnDirectoryContentCellPressedAsync"
                            >

                            <DataGrid.Columns>
                                <DataGridTextColumn Header="Name" Binding="{ Binding Name }" />
                                <DataGridTextColumn Header="Size" Binding="{ Binding Size }" />
                            </DataGrid.Columns>
                        </DataGrid>
                    </Grid>
                </Border>
            </Grid>
        </Border>
        
        <!-- Logs -->
        <Border Classes="VisibleBorders" Grid.Column="0" Grid.Row="3" >
            <DockPanel>
                <TextBlock Text="Logs" DockPanel.Dock="Top" />

                <TextBox AcceptsReturn="True" IsReadOnly="True" Text="{Binding ConsoleText}" CaretIndex="{Binding ConsoleCaretIndex}" />
            </DockPanel>
        </Border>

        <!-- Progressbar -->
        <Border Classes="VisibleBorders" Grid.Column="0" Grid.Row="4" >
            <StackPanel>
                <ProgressBar Height="15" Minimum="0" Value="{Binding ProgressValue}" Maximum="1" Classes="TopMargin"/>
            </StackPanel>
        </Border>

    </Grid>
</Window>